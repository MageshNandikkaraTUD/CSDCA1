name: BP_CI                                       
on:
 workflow_dispatch:        
# push:                                            
#   branches: [ master ]
jobs:
  build:                                            
    runs-on: ubuntu-latest                        
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build for Release
      run: dotnet build --configuration Release      
    - name: Run unit tests
      run: dotnet test BPUnitTestProject/BPUnitTestProject.csproj --no-restore --collect "Code coverage" -l:trx
    - name: Publish Unit Test Results
      uses: dorny/test-reporter@v1
      with:
        artifact: ''
        name: MS Tests                  
        path: '**.trx'
        reporter: 'dotnet-trx'
    - name: Run tests with coverage
      run: dotnet test --no-build --collect:"XPlat Code Coverage"
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: '**/coverage.cobertura.xml'
    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: '**/coverage.cobertura.xml'
        format: markdown
        output: both
        
  dependency_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'BPCalculator'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 8            
          # fail if CVSS score is High >=8          
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports



  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

